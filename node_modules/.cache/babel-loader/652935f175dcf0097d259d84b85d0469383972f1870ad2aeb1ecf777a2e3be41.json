{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\CryptoInfo.js\",\n  _s = $RefreshSig$();\n// CryptoInfo.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoInfo = ({\n  crypto\n}) => {\n  _s();\n  const [cryptoData, setCryptoData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchCryptoData = async () => {\n      setLoading(true);\n      try {\n        const response = await axios.get(`https://api.coincap.io/v2/assets/${crypto}`);\n        setCryptoData(response.data.data);\n      } catch (error) {\n        console.error('Error fetching crypto data:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCryptoData();\n  }, [crypto]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container d-flex justify-content-center align-items-center\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  if (!cryptoData) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto-info-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [cryptoData.name, \" (\", cryptoData.symbol.toUpperCase(), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rank: \", cryptoData.rank]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Market Cap: $\", parseFloat(cryptoData.marketCapUsd).toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Supply: \", parseFloat(cryptoData.supply).toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Max Supply: \", cryptoData.maxSupply ? parseFloat(cryptoData.maxSupply).toFixed(2) : 'N/A']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Volume (24Hr): $\", parseFloat(cryptoData.volumeUsd24Hr).toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crypto-links\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `https://www.coincap.io/assets/${cryptoData.id}`,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"More Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoInfo, \"3jrmOsj3luDhb1OaE+iT1L8s6YA=\");\n_c = CryptoInfo;\nexport default CryptoInfo;\nvar _c;\n$RefreshReg$(_c, \"CryptoInfo\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CryptoInfo","crypto","_s","cryptoData","setCryptoData","loading","setLoading","fetchCryptoData","response","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","symbol","toUpperCase","rank","parseFloat","marketCapUsd","toFixed","supply","maxSupply","volumeUsd24Hr","href","id","target","rel","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/CryptoInfo.js"],"sourcesContent":["// CryptoInfo.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CryptoInfo = ({ crypto }) => {\r\n  const [cryptoData, setCryptoData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await axios.get(`https://api.coincap.io/v2/assets/${crypto}`);\r\n        setCryptoData(response.data.data);\r\n      } catch (error) {\r\n        console.error('Error fetching crypto data:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCryptoData();\r\n  }, [crypto]);\r\n\r\n  if (loading) {\r\n    return <div className=\"loading-container d-flex justify-content-center align-items-center\">Loading...</div>;\r\n  }\r\n\r\n  if (!cryptoData) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"crypto-info-container\">\r\n      <h2>{cryptoData.name} ({cryptoData.symbol.toUpperCase()})</h2>\r\n      <p>Rank: {cryptoData.rank}</p>\r\n      <p>Market Cap: ${parseFloat(cryptoData.marketCapUsd).toFixed(2)}</p>\r\n      <p>Supply: {parseFloat(cryptoData.supply).toFixed(2)}</p>\r\n      <p>Max Supply: {cryptoData.maxSupply ? parseFloat(cryptoData.maxSupply).toFixed(2) : 'N/A'}</p>\r\n      <p>Volume (24Hr): ${parseFloat(cryptoData.volumeUsd24Hr).toFixed(2)}</p>\r\n      <div className=\"crypto-links\">\r\n        <a href={`https://www.coincap.io/assets/${cryptoData.id}`} target=\"_blank\" rel=\"noopener noreferrer\">More Info</a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoInfo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}