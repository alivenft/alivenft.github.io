{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import CryptoChart from'./CryptoChart';import CurrencyConverter from'./CurrencyConverter';import CoinTable from'./CoinTable';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const intervals={'1h':'m1','24h':'h1','7d':'d1','1m':'d1','3m':'d1','1y':'d1'};const BitcoinPriceTracker=()=>{const[data,setData]=useState([]);const[interval,setInterval]=useState('1h');const[crypto,setCrypto]=useState('bitcoin');const[cryptoList,setCryptoList]=useState([]);useEffect(()=>{const fetchCryptoList=async()=>{try{const response=await axios.get('https://api.coincap.io/v2/assets');const enrichedCryptoList=await Promise.all(response.data.data.map(async crypto=>{const sparklineResponse=await axios.get(\"https://api.coincap.io/v2/assets/\".concat(crypto.id,\"/history?interval=h1\"));const sparkline=sparklineResponse.data.data.map(point=>parseFloat(point.priceUsd));return{...crypto,changePercent24Hr:parseFloat(crypto.changePercent24Hr),icon:\"https://assets.coincap.io/assets/icons/\".concat(crypto.symbol.toLowerCase(),\"@2x.png\"),sparkline};}));setCryptoList(enrichedCryptoList);}catch(error){console.error('Error fetching crypto list:',error);}};fetchCryptoList();},[]);useEffect(()=>{const calculateStartDate=interval=>{const now=Date.now();switch(interval){case'1y':return now-365*24*60*60*1000;case'3m':return now-90*24*60*60*1000;case'1m':return now-30*24*60*60*1000;case'7d':return now-7*24*60*60*1000;case'24h':return now-24*60*60*1000;default:return now-60*60*1000;}};const fetchCryptoData=async()=>{try{const startDate=calculateStartDate(interval);const response=await axios.get(\"https://api.coincap.io/v2/assets/\".concat(crypto,\"/history\"),{params:{interval:intervals[interval],start:startDate,end:Date.now()}});const formattedData=response.data.data.map(point=>[new Date(point.time).getTime(),parseFloat(point.priceUsd)]);setData(formattedData);}catch(error){console.error(\"Error fetching data for \".concat(crypto,\":\"),error);}};fetchCryptoData();},[interval,crypto]);return/*#__PURE__*/_jsx(\"div\",{className:\"outer-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-container text-center my-5\",children:[/*#__PURE__*/_jsx(CoinTable,{cryptoList:cryptoList,setCrypto:setCrypto}),/*#__PURE__*/_jsxs(\"div\",{id:\"crypto-details\",children:[/*#__PURE__*/_jsx(CurrencyConverter,{crypto:crypto}),/*#__PURE__*/_jsx(CryptoChart,{data:data,interval:interval,setInterval:setInterval})]})]})});};export default BitcoinPriceTracker;","map":{"version":3,"names":["React","useState","useEffect","axios","CryptoChart","CurrencyConverter","CoinTable","jsx","_jsx","jsxs","_jsxs","intervals","BitcoinPriceTracker","data","setData","interval","setInterval","crypto","setCrypto","cryptoList","setCryptoList","fetchCryptoList","response","get","enrichedCryptoList","Promise","all","map","sparklineResponse","concat","id","sparkline","point","parseFloat","priceUsd","changePercent24Hr","icon","symbol","toLowerCase","error","console","calculateStartDate","now","Date","fetchCryptoData","startDate","params","start","end","formattedData","time","getTime","className","children"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/BitcoinPriceTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CryptoChart from './CryptoChart';\r\nimport CurrencyConverter from './CurrencyConverter';\r\nimport CoinTable from './CoinTable';\r\n\r\nconst intervals = {\r\n  '1h': 'm1',\r\n  '24h': 'h1',\r\n  '7d': 'd1',\r\n  '1m': 'd1',\r\n  '3m': 'd1',\r\n  '1y': 'd1',\r\n};\r\n\r\nconst BitcoinPriceTracker = () => {\r\n  const [data, setData] = useState([]);\r\n  const [interval, setInterval] = useState('1h');\r\n  const [crypto, setCrypto] = useState('bitcoin');\r\n  const [cryptoList, setCryptoList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoList = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets');\r\n        const enrichedCryptoList = await Promise.all(\r\n          response.data.data.map(async (crypto) => {\r\n            const sparklineResponse = await axios.get(`https://api.coincap.io/v2/assets/${crypto.id}/history?interval=h1`);\r\n            const sparkline = sparklineResponse.data.data.map(point => parseFloat(point.priceUsd));\r\n            return {\r\n              ...crypto,\r\n              changePercent24Hr: parseFloat(crypto.changePercent24Hr),\r\n              icon: `https://assets.coincap.io/assets/icons/${crypto.symbol.toLowerCase()}@2x.png`,\r\n              sparkline,\r\n            };\r\n          })\r\n        );\r\n        setCryptoList(enrichedCryptoList);\r\n      } catch (error) {\r\n        console.error('Error fetching crypto list:', error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const calculateStartDate = (interval) => {\r\n      const now = Date.now();\r\n      switch (interval) {\r\n        case '1y':\r\n          return now - 365 * 24 * 60 * 60 * 1000;\r\n        case '3m':\r\n          return now - 90 * 24 * 60 * 60 * 1000;\r\n        case '1m':\r\n          return now - 30 * 24 * 60 * 60 * 1000;\r\n        case '7d':\r\n          return now - 7 * 24 * 60 * 60 * 1000;\r\n        case '24h':\r\n          return now - 24 * 60 * 60 * 1000;\r\n        default:\r\n          return now - 60 * 60 * 1000;\r\n      }\r\n    };\r\n\r\n    const fetchCryptoData = async () => {\r\n      try {\r\n        const startDate = calculateStartDate(interval);\r\n        const response = await axios.get(\r\n          `https://api.coincap.io/v2/assets/${crypto}/history`,\r\n          {\r\n            params: {\r\n              interval: intervals[interval],\r\n              start: startDate,\r\n              end: Date.now(),\r\n            },\r\n          }\r\n        );\r\n        const formattedData = response.data.data.map((point) => [\r\n          new Date(point.time).getTime(),\r\n          parseFloat(point.priceUsd),\r\n        ]);\r\n        setData(formattedData);\r\n      } catch (error) {\r\n        console.error(`Error fetching data for ${crypto}:`, error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoData();\r\n  }, [interval, crypto]);\r\n\r\n  return (\r\n    <div className=\"outer-container\">\r\n      <div className=\"main-container text-center my-5\">\r\n        <CoinTable cryptoList={cryptoList} setCrypto={setCrypto} />\r\n        <div id=\"crypto-details\">\r\n          <CurrencyConverter crypto={crypto} />\r\n          <CryptoChart data={data} interval={interval} setInterval={setInterval} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitcoinPriceTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}