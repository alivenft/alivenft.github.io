{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\CryptoChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './chart.css'; // Import chart styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CryptoChart = ({\n  data\n}) => {\n  const chartData = {\n    labels: data.map(point => new Date(point[0]).toLocaleString()),\n    datasets: [{\n      label: 'Price (USD)',\n      data: data.map(point => point[1]),\n      fill: {\n        target: 'origin',\n        above: 'rgba(255, 99, 132, 0.5)',\n        // Red color with opacity\n        below: 'rgba(255, 99, 132, 0)' // Transparent\n      },\n      borderColor: 'rgba(255, 99, 132, 1)',\n      // Red color\n      pointBackgroundColor: '#fff',\n      pointBorderColor: 'rgba(255, 99, 132, 1)',\n      // Red color\n      pointHoverBackgroundColor: 'rgba(255, 99, 132, 1)',\n      // Red color\n      pointHoverBorderColor: '#fff',\n      pointRadius: 3,\n      pointHoverRadius: 1,\n      tension: 0.6\n    }]\n  };\n  const chartOptions = {\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n        titleColor: '#fff',\n        // White color\n        bodyColor: '#fff',\n        // White color\n        footerColor: '#fff',\n        // White color\n        callbacks: {\n          label: function (context) {\n            return `Price: $${context.raw.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 20,\n        bottom: 20\n      }\n    },\n    animation: {\n      duration: 1500,\n      easing: 'easeInOutQuart'\n    },\n    scales: {\n      x: {\n        ticks: {\n          color: '#fff'\n        },\n        grid: {\n          color: 'rgba(255, 255, 255, 0.2)'\n        }\n      },\n      y: {\n        ticks: {\n          color: '#fff'\n        },\n        grid: {\n          color: 'rgba(255, 255, 255, 0.2)'\n        }\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container mt-5 sticky-top bg-dark p-3\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","CryptoChart","data","chartData","labels","map","point","Date","toLocaleString","datasets","label","fill","target","above","below","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointHoverRadius","tension","chartOptions","plugins","legend","display","tooltip","enabled","backgroundColor","titleColor","bodyColor","footerColor","callbacks","context","raw","toFixed","layout","padding","left","right","top","bottom","animation","duration","easing","scales","x","ticks","color","grid","y","responsive","maintainAspectRatio","className","children","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/CryptoChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\nimport './chart.css'; // Import chart styles\r\n\r\nconst CryptoChart = ({ data }) => {\r\n  const chartData = {\r\n    labels: data.map(point => new Date(point[0]).toLocaleString()),\r\n    datasets: [\r\n      {\r\n        label: 'Price (USD)',\r\n        data: data.map(point => point[1]),\r\n        fill: {\r\n          target: 'origin',\r\n          above: 'rgba(255, 99, 132, 0.5)', // Red color with opacity\r\n          below: 'rgba(255, 99, 132, 0)', // Transparent\r\n        },\r\n        borderColor: 'rgba(255, 99, 132, 1)', // Red color\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderColor: 'rgba(255, 99, 132, 1)', // Red color\r\n        pointHoverBackgroundColor: 'rgba(255, 99, 132, 1)', // Red color\r\n        pointHoverBorderColor: '#fff',\r\n        pointRadius: 3,\r\n        pointHoverRadius: 1,\r\n        tension: 0.6,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n        titleColor: '#fff', // White color\r\n        bodyColor: '#fff', // White color\r\n        footerColor: '#fff', // White color\r\n        callbacks: {\r\n          label: function (context) {\r\n            return `Price: $${context.raw.toFixed(2)}`;\r\n          },\r\n        },\r\n      },\r\n    },\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 20,\r\n        bottom: 20,\r\n      },\r\n    },\r\n    animation: {\r\n      duration: 1500,\r\n      easing: 'easeInOutQuart',\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          color: '#fff',\r\n        },\r\n        grid: {\r\n          color: 'rgba(255, 255, 255, 0.2)',\r\n        },\r\n      },\r\n      y: {\r\n        ticks: {\r\n          color: '#fff',\r\n        },\r\n        grid: {\r\n          color: 'rgba(255, 255, 255, 0.2)',\r\n        },\r\n      },\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container mt-5 sticky-top bg-dark p-3\">\r\n      <Line data={chartData} options={chartOptions} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AACtB,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEF,IAAI,CAACG,GAAG,CAACC,KAAK,IAAI,IAAIC,IAAI,CAACD,KAAK,CAAC,CAAC,CAAC,CAAC,CAACE,cAAc,CAAC,CAAC,CAAC;IAC9DC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,aAAa;MACpBR,IAAI,EAAEA,IAAI,CAACG,GAAG,CAACC,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,CAAC;MACjCK,IAAI,EAAE;QACJC,MAAM,EAAE,QAAQ;QAChBC,KAAK,EAAE,yBAAyB;QAAE;QAClCC,KAAK,EAAE,uBAAuB,CAAE;MAClC,CAAC;MACDC,WAAW,EAAE,uBAAuB;MAAE;MACtCC,oBAAoB,EAAE,MAAM;MAC5BC,gBAAgB,EAAE,uBAAuB;MAAE;MAC3CC,yBAAyB,EAAE,uBAAuB;MAAE;MACpDC,qBAAqB,EAAE,MAAM;MAC7BC,WAAW,EAAE,CAAC;MACdC,gBAAgB,EAAE,CAAC;MACnBC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;QACPC,OAAO,EAAE,IAAI;QACbC,eAAe,EAAE,oBAAoB;QACrCC,UAAU,EAAE,MAAM;QAAE;QACpBC,SAAS,EAAE,MAAM;QAAE;QACnBC,WAAW,EAAE,MAAM;QAAE;QACrBC,SAAS,EAAE;UACTvB,KAAK,EAAE,SAAAA,CAAUwB,OAAO,EAAE;YACxB,OAAO,WAAWA,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE;UAC5C;QACF;MACF;IACF,CAAC;IACDC,MAAM,EAAE;MACNC,OAAO,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,EAAE;QACPC,MAAM,EAAE;MACV;IACF,CAAC;IACDC,SAAS,EAAE;MACTC,QAAQ,EAAE,IAAI;MACdC,MAAM,EAAE;IACV,CAAC;IACDC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,KAAK,EAAE;UACLC,KAAK,EAAE;QACT,CAAC;QACDC,IAAI,EAAE;UACJD,KAAK,EAAE;QACT;MACF,CAAC;MACDE,CAAC,EAAE;QACDH,KAAK,EAAE;UACLC,KAAK,EAAE;QACT,CAAC;QACDC,IAAI,EAAE;UACJD,KAAK,EAAE;QACT;MACF;IACF,CAAC;IACDG,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE;EACvB,CAAC;EAED,oBACErD,OAAA;IAAKsD,SAAS,EAAC,6CAA6C;IAAAC,QAAA,eAC1DvD,OAAA,CAACF,IAAI;MAACI,IAAI,EAAEC,SAAU;MAACqD,OAAO,EAAEjC;IAAa;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACC,EAAA,GAjFI5D,WAAW;AAmFjB,eAAeA,WAAW;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}