{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\LiveBTCPrice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveBTCPrice = () => {\n  _s();\n  const [price, setPrice] = useState(null);\n  const [previousPrice, setPreviousPrice] = useState(null);\n  const [priceChangePercentage, setPriceChangePercentage] = useState(localStorage.getItem('btcPriceChangePercentage') || null);\n  useEffect(() => {\n    const fetchPrice = async () => {\n      try {\n        const response = await axios.get('https://api.coincap.io/v2/assets/bitcoin');\n        const newPrice = parseFloat(response.data.data.priceUsd);\n        const newPriceChangePercentage = previousPrice !== null ? (newPrice - previousPrice) / previousPrice * 100 : null;\n        setPrice(newPrice);\n        setPreviousPrice(newPrice);\n        if (newPriceChangePercentage !== null) {\n          setPriceChangePercentage(newPriceChangePercentage);\n          localStorage.setItem('btcPriceChangePercentage', newPriceChangePercentage);\n        }\n      } catch (error) {\n        console.error('Error fetching live BTC price:', error);\n      }\n    };\n    fetchPrice();\n    const interval = setInterval(fetchPrice, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  const getColor = () => {\n    if (priceChangePercentage === null) return '#39FF14';\n    return priceChangePercentage > 0 ? '#39FF14' : '#FF0000';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"live-price-container bg-hackerBlack text-hackerGreen p-4 rounded-lg shadow-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"live-price text-center mb-4\",\n      style: {\n        color: getColor()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"label font-bold mr-2\",\n        children: \"Live BTC Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"price font-bold\",\n        children: price !== null ? `$${price.toFixed(2)}` : 'Loading...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), priceChangePercentage !== null && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"price-indicator font-bold ml-2\",\n        style: {\n          fontSize: '0.8rem'\n        },\n        children: [priceChangePercentage > 0 ? '▲' : '▼', \" (\", Math.abs(priceChangePercentage).toFixed(2), \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveBTCPrice, \"TD8EC/53+XpZK4nAvmJD2oYF+Gs=\");\n_c = LiveBTCPrice;\nexport default LiveBTCPrice;\nvar _c;\n$RefreshReg$(_c, \"LiveBTCPrice\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","LiveBTCPrice","_s","price","setPrice","previousPrice","setPreviousPrice","priceChangePercentage","setPriceChangePercentage","localStorage","getItem","fetchPrice","response","get","newPrice","parseFloat","data","priceUsd","newPriceChangePercentage","setItem","error","console","interval","setInterval","clearInterval","getColor","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","fontSize","Math","abs","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/LiveBTCPrice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LiveBTCPrice = () => {\r\n  const [price, setPrice] = useState(null);\r\n  const [previousPrice, setPreviousPrice] = useState(null);\r\n  const [priceChangePercentage, setPriceChangePercentage] = useState(\r\n    localStorage.getItem('btcPriceChangePercentage') || null\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPrice = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets/bitcoin');\r\n        const newPrice = parseFloat(response.data.data.priceUsd);\r\n        const newPriceChangePercentage =\r\n          previousPrice !== null ? ((newPrice - previousPrice) / previousPrice) * 100 : null;\r\n\r\n        setPrice(newPrice);\r\n        setPreviousPrice(newPrice);\r\n\r\n        if (newPriceChangePercentage !== null) {\r\n          setPriceChangePercentage(newPriceChangePercentage);\r\n          localStorage.setItem('btcPriceChangePercentage', newPriceChangePercentage);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching live BTC price:', error);\r\n      }\r\n    };\r\n\r\n    fetchPrice();\r\n    const interval = setInterval(fetchPrice, 10000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getColor = () => {\r\n    if (priceChangePercentage === null) return '#39FF14';\r\n    return priceChangePercentage > 0 ? '#39FF14' : '#FF0000';\r\n  };\r\n\r\n  return (\r\n    <div className=\"live-price-container bg-hackerBlack text-hackerGreen p-4 rounded-lg shadow-lg\">\r\n      <div className=\"live-price text-center mb-4\" style={{ color: getColor() }}>\r\n        <span className=\"label font-bold mr-2\">Live BTC Price:</span>\r\n        <span className=\"price font-bold\">\r\n          {price !== null ? `$${price.toFixed(2)}` : 'Loading...'}\r\n        </span>\r\n        {priceChangePercentage !== null && (\r\n          <span className=\"price-indicator font-bold ml-2\" style={{ fontSize: '0.8rem' }}>\r\n            {priceChangePercentage > 0 ? '▲' : '▼'} ({Math.abs(priceChangePercentage).toFixed(2)}%)\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveBTCPrice;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACW,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGZ,QAAQ,CAChEa,YAAY,CAACC,OAAO,CAAC,0BAA0B,CAAC,IAAI,IACtD,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,0CAA0C,CAAC;QAC5E,MAAMC,QAAQ,GAAGC,UAAU,CAACH,QAAQ,CAACI,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC;QACxD,MAAMC,wBAAwB,GAC5Bb,aAAa,KAAK,IAAI,GAAI,CAACS,QAAQ,GAAGT,aAAa,IAAIA,aAAa,GAAI,GAAG,GAAG,IAAI;QAEpFD,QAAQ,CAACU,QAAQ,CAAC;QAClBR,gBAAgB,CAACQ,QAAQ,CAAC;QAE1B,IAAII,wBAAwB,KAAK,IAAI,EAAE;UACrCV,wBAAwB,CAACU,wBAAwB,CAAC;UAClDT,YAAY,CAACU,OAAO,CAAC,0BAA0B,EAAED,wBAAwB,CAAC;QAC5E;MACF,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDT,UAAU,CAAC,CAAC;IACZ,MAAMW,QAAQ,GAAGC,WAAW,CAACZ,UAAU,EAAE,KAAK,CAAC;IAE/C,OAAO,MAAMa,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIlB,qBAAqB,KAAK,IAAI,EAAE,OAAO,SAAS;IACpD,OAAOA,qBAAqB,GAAG,CAAC,GAAG,SAAS,GAAG,SAAS;EAC1D,CAAC;EAED,oBACEP,OAAA;IAAK0B,SAAS,EAAC,+EAA+E;IAAAC,QAAA,eAC5F3B,OAAA;MAAK0B,SAAS,EAAC,6BAA6B;MAACE,KAAK,EAAE;QAAEC,KAAK,EAAEJ,QAAQ,CAAC;MAAE,CAAE;MAAAE,QAAA,gBACxE3B,OAAA;QAAM0B,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC7DjC,OAAA;QAAM0B,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC9BxB,KAAK,KAAK,IAAI,GAAG,IAAIA,KAAK,CAAC+B,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,EACN1B,qBAAqB,KAAK,IAAI,iBAC7BP,OAAA;QAAM0B,SAAS,EAAC,gCAAgC;QAACE,KAAK,EAAE;UAAEO,QAAQ,EAAE;QAAS,CAAE;QAAAR,QAAA,GAC5EpB,qBAAqB,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAC,IAAE,EAAC6B,IAAI,CAACC,GAAG,CAAC9B,qBAAqB,CAAC,CAAC2B,OAAO,CAAC,CAAC,CAAC,EAAC,IACvF;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CArDID,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAuDlB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}