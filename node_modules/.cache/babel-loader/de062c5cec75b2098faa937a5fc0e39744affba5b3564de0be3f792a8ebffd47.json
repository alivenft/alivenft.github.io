{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./CoinTable.css';// Ensure you create and link the CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CoinTable=_ref=>{let{cryptoList,setCrypto}=_ref;const[currentPage,setCurrentPage]=useState(1);const itemsPerPage=20;const[liveCryptoList,setLiveCryptoList]=useState(cryptoList);useEffect(()=>{const fetchLiveData=async()=>{try{const response=await axios.get('https://api.coincap.io/v2/assets');const updatedList=response.data.data.map(crypto=>({...crypto,changePercent24Hr:parseFloat(crypto.changePercent24Hr),icon:\"https://assets.coincap.io/assets/icons/\".concat(crypto.symbol.toLowerCase(),\"@2x.png\")}));setLiveCryptoList(prevList=>prevList.map(prevCrypto=>{const updatedCrypto=updatedList.find(c=>c.id===prevCrypto.id);if(updatedCrypto){const priceChangeClass=updatedCrypto.priceUsd>prevCrypto.priceUsd?'price-up':updatedCrypto.priceUsd<prevCrypto.priceUsd?'price-down':'';return{...prevCrypto,...updatedCrypto,priceChangeClass};}return prevCrypto;}));}catch(error){console.error('Error fetching live crypto data:',error);}};// Polling every 10 seconds\nconst intervalId=setInterval(fetchLiveData,10000);fetchLiveData();return()=>clearInterval(intervalId);},[]);const handleClick=id=>{setCrypto(id);};const totalPages=Math.ceil(liveCryptoList.length/itemsPerPage);const indexOfLastItem=currentPage*itemsPerPage;const indexOfFirstItem=indexOfLastItem-itemsPerPage;const currentItems=liveCryptoList.slice(indexOfFirstItem,indexOfLastItem);const handlePageChange=pageNumber=>setCurrentPage(pageNumber);return/*#__PURE__*/_jsxs(\"div\",{className:\"coin-table-container\",children:[/*#__PURE__*/_jsxs(\"table\",{className:\"coin-table\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"#\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Coin\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Price\"}),/*#__PURE__*/_jsx(\"th\",{children:\"24h\"}),/*#__PURE__*/_jsx(\"th\",{children:\"24h Volume\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Market Cap\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:currentItems.map((crypto,index)=>/*#__PURE__*/_jsxs(\"tr\",{onClick:()=>handleClick(crypto.id),className:crypto.priceChangeClass,children:[/*#__PURE__*/_jsx(\"td\",{children:indexOfFirstItem+index+1}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"img\",{src:crypto.icon,alt:\"\".concat(crypto.name,\" icon\"),style:{width:'20px',marginRight:'10px'}}),crypto.name]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",parseFloat(crypto.priceUsd).toFixed(2)]}),/*#__PURE__*/_jsx(\"td\",{className:crypto.changePercent24Hr>0?'positive-change':'negative-change',children:crypto.changePercent24Hr?\"\".concat(crypto.changePercent24Hr.toFixed(2),\"%\"):'N/A'}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",parseFloat(crypto.volumeUsd24Hr).toFixed(2)]}),/*#__PURE__*/_jsxs(\"td\",{children:[\"$\",parseFloat(crypto.marketCapUsd).toFixed(2)]})]},crypto.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"pagination\",children:[...Array(totalPages)].map((_,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"page-button \".concat(currentPage===index+1?'active':''),onClick:()=>handlePageChange(index+1),children:index+1},index))})]});};export default CoinTable;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","CoinTable","_ref","cryptoList","setCrypto","currentPage","setCurrentPage","itemsPerPage","liveCryptoList","setLiveCryptoList","fetchLiveData","response","get","updatedList","data","map","crypto","changePercent24Hr","parseFloat","icon","concat","symbol","toLowerCase","prevList","prevCrypto","updatedCrypto","find","c","id","priceChangeClass","priceUsd","error","console","intervalId","setInterval","clearInterval","handleClick","totalPages","Math","ceil","length","indexOfLastItem","indexOfFirstItem","currentItems","slice","handlePageChange","pageNumber","className","children","index","onClick","src","alt","name","style","width","marginRight","toFixed","volumeUsd24Hr","marketCapUsd","Array","_"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/CoinTable.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './CoinTable.css'; // Ensure you create and link the CSS file\r\n\r\nconst CoinTable = ({ cryptoList, setCrypto }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 20;\r\n  const [liveCryptoList, setLiveCryptoList] = useState(cryptoList);\r\n\r\n  useEffect(() => {\r\n    const fetchLiveData = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets');\r\n        const updatedList = response.data.data.map((crypto) => ({\r\n          ...crypto,\r\n          changePercent24Hr: parseFloat(crypto.changePercent24Hr),\r\n          icon: `https://assets.coincap.io/assets/icons/${crypto.symbol.toLowerCase()}@2x.png`,\r\n        }));\r\n        setLiveCryptoList((prevList) =>\r\n          prevList.map((prevCrypto) => {\r\n            const updatedCrypto = updatedList.find((c) => c.id === prevCrypto.id);\r\n            if (updatedCrypto) {\r\n              const priceChangeClass =\r\n                updatedCrypto.priceUsd > prevCrypto.priceUsd\r\n                  ? 'price-up'\r\n                  : updatedCrypto.priceUsd < prevCrypto.priceUsd\r\n                  ? 'price-down'\r\n                  : '';\r\n              return { ...prevCrypto, ...updatedCrypto, priceChangeClass };\r\n            }\r\n            return prevCrypto;\r\n          })\r\n        );\r\n      } catch (error) {\r\n        console.error('Error fetching live crypto data:', error);\r\n      }\r\n    };\r\n\r\n    // Polling every 10 seconds\r\n    const intervalId = setInterval(fetchLiveData, 10000);\r\n    fetchLiveData();\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const handleClick = (id) => {\r\n    setCrypto(id);\r\n  };\r\n\r\n  const totalPages = Math.ceil(liveCryptoList.length / itemsPerPage);\r\n  const indexOfLastItem = currentPage * itemsPerPage;\r\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\r\n  const currentItems = liveCryptoList.slice(indexOfFirstItem, indexOfLastItem);\r\n\r\n  const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"coin-table-container\">\r\n      <table className=\"coin-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Coin</th>\r\n            <th>Price</th>\r\n            <th>24h</th>\r\n            <th>24h Volume</th>\r\n            <th>Market Cap</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentItems.map((crypto, index) => (\r\n            <tr\r\n              key={crypto.id}\r\n              onClick={() => handleClick(crypto.id)}\r\n              className={crypto.priceChangeClass}\r\n            >\r\n              <td>{indexOfFirstItem + index + 1}</td>\r\n              <td>\r\n                <img\r\n                  src={crypto.icon}\r\n                  alt={`${crypto.name} icon`}\r\n                  style={{ width: '20px', marginRight: '10px' }}\r\n                />\r\n                {crypto.name}\r\n              </td>\r\n              <td>${parseFloat(crypto.priceUsd).toFixed(2)}</td>\r\n              <td className={crypto.changePercent24Hr > 0 ? 'positive-change' : 'negative-change'}>\r\n                {crypto.changePercent24Hr ? `${crypto.changePercent24Hr.toFixed(2)}%` : 'N/A'}\r\n              </td>\r\n              <td>${parseFloat(crypto.volumeUsd24Hr).toFixed(2)}</td>\r\n              <td>${parseFloat(crypto.marketCapUsd).toFixed(2)}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination\">\r\n        {[...Array(totalPages)].map((_, index) => (\r\n          <button\r\n            key={index}\r\n            className={`page-button ${currentPage === index + 1 ? 'active' : ''}`}\r\n            onClick={() => handlePageChange(index + 1)}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoinTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}