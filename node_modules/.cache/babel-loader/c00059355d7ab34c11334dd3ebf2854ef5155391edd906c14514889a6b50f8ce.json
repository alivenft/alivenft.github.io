{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\CryptoChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst intervals = {\n  '1h': 'm1',\n  '24h': 'h1',\n  '7d': 'd1',\n  '1m': 'd1',\n  '3m': 'd1',\n  '1y': 'd1'\n};\nconst CryptoChart = ({\n  data,\n  interval,\n  setInterval\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (chartRef.current) {\n      const chart = chartRef.current;\n      const ctx = chart.ctx;\n      const gradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\n      gradient.addColorStop(0, 'rgba(255, 140, 0, 0.25)'); // Brighter orange at the top\n      gradient.addColorStop(1, 'rgba(255, 140, 0, 0)'); // Transparent at the bottom\n\n      chart.data.datasets[0].backgroundColor = gradient;\n      chart.update();\n    }\n  }, [data]);\n  const chartData = {\n    labels: data.map(point => new Date(point[0]).toLocaleString()),\n    datasets: [{\n      label: 'Price (USD)',\n      data: data.map(point => point[1]),\n      fill: true,\n      backgroundColor: 'rgba(255, 140, 0, 0.25)',\n      // This will be overridden by the gradient\n      borderColor: 'rgba(255, 140, 0, 1)',\n      // Orange color\n      pointBackgroundColor: '#fff',\n      pointBorderColor: 'rgba(255, 140, 0, 1)',\n      // Orange color\n      pointHoverBackgroundColor: 'rgba(255, 140, 0, 1)',\n      // Orange color\n      pointHoverBorderColor: '#fff',\n      pointRadius: 3,\n      pointHoverRadius: 5,\n      tension: 0.4\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        ticks: {\n          color: '#e0e0e0' // Light grey color\n        },\n        grid: {\n          color: 'rgba(224, 224, 224, 0.2)' // Light grey color\n        }\n      },\n      y: {\n        ticks: {\n          color: '#e0e0e0',\n          // Light grey color\n          callback: function (value) {\n            return parseFloat(value).toFixed(2); // Adjust this to the number of decimal places needed\n          }\n        },\n        grid: {\n          color: 'rgba(224, 224, 224, 0.2)' // Light grey color\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        labels: {\n          color: '#e0e0e0' // Light grey color\n        }\n      },\n      tooltip: {\n        enabled: true,\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\n        titleColor: '#e0e0e0',\n        // Light grey color\n        bodyColor: '#e0e0e0',\n        // Light grey color\n        footerColor: '#e0e0e0',\n        // Light grey color\n        callbacks: {\n          label: function (context) {\n            return `Price: $${context.raw.toFixed(2)}`;\n          }\n        }\n      },\n      subtitle: {\n        display: true,\n        text: 'Crypto Price over Time',\n        color: '#e0e0e0',\n        // Light grey color\n        font: {\n          size: 12\n        },\n        padding: {\n          bottom: 10\n        }\n      }\n    },\n    animation: {\n      duration: 1000,\n      easing: 'easeInOutQuad'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group btn-group-chart\",\n      role: \"group\",\n      children: Object.keys(intervals).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setInterval(key),\n        type: \"button\",\n        className: `btn btn-rounded btn-interval ${interval === key ? 'active' : ''}`,\n        children: key\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        ref: chartRef,\n        data: chartData,\n        options: chartOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["React","useEffect","useRef","Line","jsxDEV","_jsxDEV","intervals","CryptoChart","data","interval","setInterval","_s","chartRef","current","chart","ctx","gradient","createLinearGradient","canvas","height","addColorStop","datasets","backgroundColor","update","chartData","labels","map","point","Date","toLocaleString","label","fill","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointHoverRadius","tension","chartOptions","responsive","maintainAspectRatio","scales","x","ticks","color","grid","y","callback","value","parseFloat","toFixed","plugins","legend","tooltip","enabled","titleColor","bodyColor","footerColor","callbacks","context","raw","subtitle","display","text","font","size","padding","bottom","animation","duration","easing","className","children","role","Object","keys","key","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","ref","options","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/CryptoChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport 'chart.js/auto';\r\n\r\nconst intervals = {\r\n  '1h': 'm1',\r\n  '24h': 'h1',\r\n  '7d': 'd1',\r\n  '1m': 'd1',\r\n  '3m': 'd1',\r\n  '1y': 'd1',\r\n};\r\n\r\nconst CryptoChart = ({ data, interval, setInterval }) => {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      const chart = chartRef.current;\r\n      const ctx = chart.ctx;\r\n      const gradient = ctx.createLinearGradient(0, 0, 0, ctx.canvas.height);\r\n      gradient.addColorStop(0, 'rgba(255, 140, 0, 0.25)'); // Brighter orange at the top\r\n      gradient.addColorStop(1, 'rgba(255, 140, 0, 0)'); // Transparent at the bottom\r\n\r\n      chart.data.datasets[0].backgroundColor = gradient;\r\n      chart.update();\r\n    }\r\n  }, [data]);\r\n\r\n  const chartData = {\r\n    labels: data.map(point => new Date(point[0]).toLocaleString()),\r\n    datasets: [\r\n      {\r\n        label: 'Price (USD)',\r\n        data: data.map(point => point[1]),\r\n        fill: true,\r\n        backgroundColor: 'rgba(255, 140, 0, 0.25)', // This will be overridden by the gradient\r\n        borderColor: 'rgba(255, 140, 0, 1)', // Orange color\r\n        pointBackgroundColor: '#fff',\r\n        pointBorderColor: 'rgba(255, 140, 0, 1)', // Orange color\r\n        pointHoverBackgroundColor: 'rgba(255, 140, 0, 1)', // Orange color\r\n        pointHoverBorderColor: '#fff',\r\n        pointRadius: 3,\r\n        pointHoverRadius: 5,\r\n        tension: 0.4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          color: '#e0e0e0', // Light grey color\r\n        },\r\n        grid: {\r\n          color: 'rgba(224, 224, 224, 0.2)', // Light grey color\r\n        },\r\n      },\r\n      y: {\r\n        ticks: {\r\n          color: '#e0e0e0', // Light grey color\r\n          callback: function(value) {\r\n            return parseFloat(value).toFixed(2); // Adjust this to the number of decimal places needed\r\n          },\r\n        },\r\n        grid: {\r\n          color: 'rgba(224, 224, 224, 0.2)', // Light grey color\r\n        },\r\n      },\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        labels: {\r\n          color: '#e0e0e0', // Light grey color\r\n        },\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n        titleColor: '#e0e0e0', // Light grey color\r\n        bodyColor: '#e0e0e0', // Light grey color\r\n        footerColor: '#e0e0e0', // Light grey color\r\n        callbacks: {\r\n          label: function (context) {\r\n            return `Price: $${context.raw.toFixed(2)}`;\r\n          },\r\n        },\r\n      },\r\n      subtitle: {\r\n        display: true,\r\n        text: 'Crypto Price over Time',\r\n        color: '#e0e0e0', // Light grey color\r\n        font: {\r\n          size: 12,\r\n        },\r\n        padding: {\r\n          bottom: 10,\r\n        },\r\n      },\r\n    },\r\n    animation: {\r\n      duration: 1000,\r\n      easing: 'easeInOutQuad',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container mt-5\">\r\n      <div className=\"btn-group btn-group-chart\" role=\"group\">\r\n        {Object.keys(intervals).map(key => (\r\n          <button \r\n            key={key} \r\n            onClick={() => setInterval(key)} \r\n            type=\"button\"\r\n            className={`btn btn-rounded btn-interval ${interval === key ? 'active' : ''}`}\r\n          >\r\n            {key}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"chart-wrapper\">\r\n        <Line ref={chartRef} data={chartData} options={chartOptions} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}