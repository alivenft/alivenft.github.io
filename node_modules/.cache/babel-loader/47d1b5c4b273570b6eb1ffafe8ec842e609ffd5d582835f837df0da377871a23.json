{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\BitcoinPriceTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CryptoChart from './CryptoChart';\nimport CurrencyConverter from './CurrencyConverter';\nimport CoinTable from './CoinTable';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst intervals = {\n  '1h': 'm1',\n  '24h': 'h1',\n  '7d': 'd1',\n  '1m': 'd1',\n  '3m': 'd1',\n  '1y': 'd1'\n};\nconst BitcoinPriceTracker = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [interval, setInterval] = useState('1h');\n  const [crypto, setCrypto] = useState('bitcoin');\n  const [loading, setLoading] = useState(true);\n  const [cryptoList, setCryptoList] = useState([]);\n  useEffect(() => {\n    const fetchCryptoList = async () => {\n      try {\n        const response = await axios.get('https://api.coincap.io/v2/assets');\n        const enrichedCryptoList = await Promise.all(response.data.data.map(async crypto => {\n          const sparklineResponse = await axios.get(`https://api.coincap.io/v2/assets/${crypto.id}/history?interval=h1`);\n          const sparkline = sparklineResponse.data.data.map(point => parseFloat(point.priceUsd));\n          return {\n            ...crypto,\n            changePercent24Hr: parseFloat(crypto.changePercent24Hr),\n            icon: `https://assets.coincap.io/assets/icons/${crypto.symbol.toLowerCase()}@2x.png`,\n            sparkline\n          };\n        }));\n        setCryptoList(enrichedCryptoList);\n      } catch (error) {\n        console.error('Error fetching crypto list:', error);\n      }\n    };\n    fetchCryptoList();\n  }, []);\n  useEffect(() => {\n    const calculateStartDate = interval => {\n      const now = Date.now();\n      switch (interval) {\n        case '1y':\n          return now - 365 * 24 * 60 * 60 * 1000;\n        case '3m':\n          return now - 90 * 24 * 60 * 60 * 1000;\n        case '1m':\n          return now - 30 * 24 * 60 * 60 * 1000;\n        case '7d':\n          return now - 7 * 24 * 60 * 60 * 1000;\n        case '24h':\n          return now - 24 * 60 * 60 * 1000;\n        default:\n          return now - 60 * 60 * 1000;\n      }\n    };\n    const fetchCryptoData = async () => {\n      setLoading(true);\n      try {\n        const startDate = calculateStartDate(interval);\n        const response = await axios.get(`https://api.coincap.io/v2/assets/${crypto}/history`, {\n          params: {\n            interval: intervals[interval],\n            start: startDate,\n            end: Date.now()\n          }\n        });\n        const formattedData = response.data.data.map(point => [new Date(point.time).getTime(), parseFloat(point.priceUsd)]);\n        setData(formattedData);\n      } catch (error) {\n        console.error(`Error fetching data for ${crypto}:`, error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCryptoData();\n  }, [interval, crypto]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container text-center my-5\",\n      children: loading ? /*#__PURE__*/_jsxDEV(SkeletonLoader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CoinTable, {\n          cryptoList: cryptoList,\n          setCrypto: setCrypto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"crypto-details\",\n          children: [/*#__PURE__*/_jsxDEV(CurrencyConverter, {\n            crypto: crypto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CryptoChart, {\n            data: data,\n            interval: interval,\n            setInterval: setInterval\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(BitcoinPriceTracker, \"aFZOzwZURP66fOR3RWToWr3z3Gk=\");\n_c = BitcoinPriceTracker;\nexport default BitcoinPriceTracker;\nvar _c;\n$RefreshReg$(_c, \"BitcoinPriceTracker\");","map":{"version":3,"names":["React","useState","useEffect","axios","CryptoChart","CurrencyConverter","CoinTable","jsxDEV","_jsxDEV","Fragment","_Fragment","intervals","BitcoinPriceTracker","_s","data","setData","interval","setInterval","crypto","setCrypto","loading","setLoading","cryptoList","setCryptoList","fetchCryptoList","response","get","enrichedCryptoList","Promise","all","map","sparklineResponse","id","sparkline","point","parseFloat","priceUsd","changePercent24Hr","icon","symbol","toLowerCase","error","console","calculateStartDate","now","Date","fetchCryptoData","startDate","params","start","end","formattedData","time","getTime","className","children","SkeletonLoader","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/BitcoinPriceTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CryptoChart from './CryptoChart';\r\nimport CurrencyConverter from './CurrencyConverter';\r\nimport CoinTable from './CoinTable';\r\n\r\nconst intervals = {\r\n  '1h': 'm1',\r\n  '24h': 'h1',\r\n  '7d': 'd1',\r\n  '1m': 'd1',\r\n  '3m': 'd1',\r\n  '1y': 'd1',\r\n};\r\n\r\nconst BitcoinPriceTracker = () => {\r\n  const [data, setData] = useState([]);\r\n  const [interval, setInterval] = useState('1h');\r\n  const [crypto, setCrypto] = useState('bitcoin');\r\n  const [loading, setLoading] = useState(true);\r\n  const [cryptoList, setCryptoList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoList = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets');\r\n        const enrichedCryptoList = await Promise.all(\r\n          response.data.data.map(async (crypto) => {\r\n            const sparklineResponse = await axios.get(`https://api.coincap.io/v2/assets/${crypto.id}/history?interval=h1`);\r\n            const sparkline = sparklineResponse.data.data.map(point => parseFloat(point.priceUsd));\r\n            return {\r\n              ...crypto,\r\n              changePercent24Hr: parseFloat(crypto.changePercent24Hr),\r\n              icon: `https://assets.coincap.io/assets/icons/${crypto.symbol.toLowerCase()}@2x.png`,\r\n              sparkline,\r\n            };\r\n          })\r\n        );\r\n        setCryptoList(enrichedCryptoList);\r\n      } catch (error) {\r\n        console.error('Error fetching crypto list:', error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const calculateStartDate = (interval) => {\r\n      const now = Date.now();\r\n      switch (interval) {\r\n        case '1y':\r\n          return now - 365 * 24 * 60 * 60 * 1000;\r\n        case '3m':\r\n          return now - 90 * 24 * 60 * 60 * 1000;\r\n        case '1m':\r\n          return now - 30 * 24 * 60 * 60 * 1000;\r\n        case '7d':\r\n          return now - 7 * 24 * 60 * 60 * 1000;\r\n        case '24h':\r\n          return now - 24 * 60 * 60 * 1000;\r\n        default:\r\n          return now - 60 * 60 * 1000;\r\n      }\r\n    };\r\n\r\n    const fetchCryptoData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const startDate = calculateStartDate(interval);\r\n        const response = await axios.get(\r\n          `https://api.coincap.io/v2/assets/${crypto}/history`,\r\n          {\r\n            params: {\r\n              interval: intervals[interval],\r\n              start: startDate,\r\n              end: Date.now(),\r\n            },\r\n          }\r\n        );\r\n        const formattedData = response.data.data.map((point) => [\r\n          new Date(point.time).getTime(),\r\n          parseFloat(point.priceUsd),\r\n        ]);\r\n        setData(formattedData);\r\n      } catch (error) {\r\n        console.error(`Error fetching data for ${crypto}:`, error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCryptoData();\r\n  }, [interval, crypto]);\r\n\r\n  return (\r\n    <div className=\"outer-container\">\r\n      <div className=\"main-container text-center my-5\">\r\n        {loading ? (\r\n          <SkeletonLoader />\r\n        ) : (\r\n          <>\r\n            <CoinTable cryptoList={cryptoList} setCrypto={setCrypto} />\r\n            <div id=\"crypto-details\">\r\n              <CurrencyConverter crypto={crypto} />\r\n              <CryptoChart data={data} interval={interval} setInterval={setInterval} />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitcoinPriceTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}