{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\BitcoinPriceTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport CryptoChart from './CryptoChart';\nimport Loading from './Loading';\nimport CurrencyConverter from './CurrencyConverter';\nimport CoinTable from './CoinTable';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst intervals = {\n  '1h': 'm1',\n  '24h': 'h1',\n  '7d': 'd1',\n  '1m': 'd1',\n  '3m': 'd1',\n  '1y': 'd1'\n};\nconst BitcoinPriceTracker = () => {\n  _s();\n  const {\n    cryptoId\n  } = useParams();\n  const [data, setData] = useState([]);\n  const [interval, setInterval] = useState('1h');\n  const [crypto, setCrypto] = useState(cryptoId || 'bitcoin');\n  const [loading, setLoading] = useState(true);\n  const [cryptoList, setCryptoList] = useState([]);\n  useEffect(() => {\n    const fetchCryptoList = async () => {\n      try {\n        const response = await axios.get('https://api.coincap.io/v2/assets');\n        const enrichedCryptoList = response.data.data.map(crypto => ({\n          ...crypto,\n          changePercent24Hr: parseFloat(crypto.changePercent24Hr),\n          icon: `https://assets.coincap.io/assets/icons/${crypto.symbol.toLowerCase()}@2x.png`\n        }));\n        setCryptoList(enrichedCryptoList);\n      } catch (error) {\n        console.error('Error fetching crypto list:', error);\n      }\n    };\n    fetchCryptoList();\n  }, []);\n  useEffect(() => {\n    if (!cryptoId) return;\n    const calculateStartDate = interval => {\n      const now = Date.now();\n      switch (interval) {\n        case '1y':\n          return now - 365 * 24 * 60 * 60 * 1000;\n        case '3m':\n          return now - 90 * 24 * 60 * 60 * 1000;\n        case '1m':\n          return now - 30 * 24 * 60 * 60 * 1000;\n        case '7d':\n          return now - 7 * 24 * 60 * 60 * 1000;\n        case '24h':\n          return now - 24 * 60 * 60 * 1000;\n        default:\n          return now - 60 * 60 * 1000;\n      }\n    };\n    const fetchCryptoData = async () => {\n      setLoading(true);\n      try {\n        const startDate = calculateStartDate(interval);\n        const response = await axios.get(`https://api.coincap.io/v2/assets/${crypto}/history`, {\n          params: {\n            interval: intervals[interval],\n            start: startDate,\n            end: Date.now()\n          }\n        });\n        const formattedData = response.data.data.map(point => [new Date(point.time).getTime(), parseFloat(point.priceUsd)]);\n        setData(formattedData);\n      } catch (error) {\n        console.error(`Error fetching data for ${crypto}:`, error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCryptoData();\n  }, [interval, crypto, cryptoId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container text-center my-5\",\n      children: [!cryptoId && /*#__PURE__*/_jsxDEV(CoinTable, {\n        cryptoList: cryptoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }, this), cryptoId && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CurrencyConverter, {\n          crypto: crypto\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(CryptoChart, {\n          data: data,\n          interval: interval,\n          setInterval: setInterval\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(BitcoinPriceTracker, \"AlkFpQ/t5bag96qj0XcN2/wEqqA=\", false, function () {\n  return [useParams];\n});\n_c = BitcoinPriceTracker;\nexport default BitcoinPriceTracker;\nvar _c;\n$RefreshReg$(_c, \"BitcoinPriceTracker\");","map":{"version":3,"names":["React","useState","useEffect","axios","CryptoChart","Loading","CurrencyConverter","CoinTable","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","intervals","BitcoinPriceTracker","_s","cryptoId","data","setData","interval","setInterval","crypto","setCrypto","loading","setLoading","cryptoList","setCryptoList","fetchCryptoList","response","get","enrichedCryptoList","map","changePercent24Hr","parseFloat","icon","symbol","toLowerCase","error","console","calculateStartDate","now","Date","fetchCryptoData","startDate","params","start","end","formattedData","point","time","getTime","priceUsd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/BitcoinPriceTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport CryptoChart from './CryptoChart';\r\nimport Loading from './Loading';\r\nimport CurrencyConverter from './CurrencyConverter';\r\nimport CoinTable from './CoinTable';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst intervals = {\r\n  '1h': 'm1',\r\n  '24h': 'h1',\r\n  '7d': 'd1',\r\n  '1m': 'd1',\r\n  '3m': 'd1',\r\n  '1y': 'd1',\r\n};\r\n\r\nconst BitcoinPriceTracker = () => {\r\n  const { cryptoId } = useParams();\r\n  const [data, setData] = useState([]);\r\n  const [interval, setInterval] = useState('1h');\r\n  const [crypto, setCrypto] = useState(cryptoId || 'bitcoin');\r\n  const [loading, setLoading] = useState(true);\r\n  const [cryptoList, setCryptoList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoList = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets');\r\n        const enrichedCryptoList = response.data.data.map((crypto) => ({\r\n          ...crypto,\r\n          changePercent24Hr: parseFloat(crypto.changePercent24Hr),\r\n          icon: `https://assets.coincap.io/assets/icons/${crypto.symbol.toLowerCase()}@2x.png`,\r\n        }));\r\n        setCryptoList(enrichedCryptoList);\r\n      } catch (error) {\r\n        console.error('Error fetching crypto list:', error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!cryptoId) return;\r\n\r\n    const calculateStartDate = (interval) => {\r\n      const now = Date.now();\r\n      switch (interval) {\r\n        case '1y':\r\n          return now - 365 * 24 * 60 * 60 * 1000;\r\n        case '3m':\r\n          return now - 90 * 24 * 60 * 60 * 1000;\r\n        case '1m':\r\n          return now - 30 * 24 * 60 * 60 * 1000;\r\n        case '7d':\r\n          return now - 7 * 24 * 60 * 60 * 1000;\r\n        case '24h':\r\n          return now - 24 * 60 * 60 * 1000;\r\n        default:\r\n          return now - 60 * 60 * 1000;\r\n      }\r\n    };\r\n\r\n    const fetchCryptoData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const startDate = calculateStartDate(interval);\r\n        const response = await axios.get(\r\n          `https://api.coincap.io/v2/assets/${crypto}/history`,\r\n          {\r\n            params: {\r\n              interval: intervals[interval],\r\n              start: startDate,\r\n              end: Date.now(),\r\n            },\r\n          }\r\n        );\r\n        const formattedData = response.data.data.map((point) => [\r\n          new Date(point.time).getTime(),\r\n          parseFloat(point.priceUsd),\r\n        ]);\r\n        setData(formattedData);\r\n      } catch (error) {\r\n        console.error(`Error fetching data for ${crypto}:`, error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchCryptoData();\r\n  }, [interval, crypto, cryptoId]);\r\n\r\n  return (\r\n    <div className=\"outer-container\">\r\n      <div className=\"main-container text-center my-5\">\r\n        {!cryptoId && <CoinTable cryptoList={cryptoList} />}\r\n        {cryptoId && (\r\n          <>\r\n            <CurrencyConverter crypto={crypto} />\r\n            {loading ? (\r\n              <Loading />\r\n            ) : (\r\n              <CryptoChart data={data} interval={interval} setInterval={setInterval} />\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BitcoinPriceTracker;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}