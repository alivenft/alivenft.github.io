{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\CryptoChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\nconst CryptoChart = ({\n  data,\n  interval,\n  setInterval\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (chartRef.current) {\n      chartRef.current.chartInstance.update();\n    }\n  }, [data]);\n  const chartData = {\n    labels: data.map(point => new Date(point[0]).toLocaleString()),\n    datasets: [{\n      label: 'Price (USD)',\n      data: data.map(point => point[1]),\n      fill: false,\n      backgroundColor: '#ff5100',\n      borderColor: '#ff5100'\n    }]\n  };\n  const chartOptions = {\n    scales: {\n      x: {\n        ticks: {\n          color: '#e0e0e0'\n        },\n        grid: {\n          color: 'rgba(224, 224, 224, 0.2)'\n        }\n      },\n      y: {\n        ticks: {\n          color: '#e0e0e0'\n        },\n        grid: {\n          color: 'rgba(224, 224, 224, 0.2)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function (context) {\n            return ` $${context.parsed.y.toFixed(2)}`;\n          }\n        }\n      }\n    }\n  };\n  const intervals = {\n    '1h': '1 Hour',\n    '1d': '1 Day',\n    '1w': '1 Week',\n    '1m': '1 Month',\n    '1y': '1 Year'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group-chart\",\n      children: Object.keys(intervals).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn btn-interval ${interval === key ? 'active' : ''}`,\n        onClick: () => setInterval(key),\n        children: intervals[key]\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: chartOptions,\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["React","useRef","useEffect","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","Tooltip","Legend","jsxDEV","_jsxDEV","register","CryptoChart","data","interval","setInterval","_s","chartRef","current","chartInstance","update","chartData","labels","map","point","Date","toLocaleString","datasets","label","fill","backgroundColor","borderColor","chartOptions","scales","x","ticks","color","grid","y","plugins","legend","display","tooltip","callbacks","context","parsed","toFixed","intervals","className","children","Object","keys","key","onClick","fileName","_jsxFileName","lineNumber","columnNumber","options","ref","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/CryptoChart.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  LineElement,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  Tooltip,\r\n  Legend\r\n} from 'chart.js';\r\n\r\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement, Tooltip, Legend);\r\n\r\nconst CryptoChart = ({ data, interval, setInterval }) => {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      chartRef.current.chartInstance.update();\r\n    }\r\n  }, [data]);\r\n\r\n  const chartData = {\r\n    labels: data.map(point => new Date(point[0]).toLocaleString()),\r\n    datasets: [\r\n      {\r\n        label: 'Price (USD)',\r\n        data: data.map(point => point[1]),\r\n        fill: false,\r\n        backgroundColor: '#ff5100',\r\n        borderColor: '#ff5100'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          color: '#e0e0e0'\r\n        },\r\n        grid: {\r\n          color: 'rgba(224, 224, 224, 0.2)'\r\n        }\r\n      },\r\n      y: {\r\n        ticks: {\r\n          color: '#e0e0e0'\r\n        },\r\n        grid: {\r\n          color: 'rgba(224, 224, 224, 0.2)'\r\n        }\r\n      }\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltip: {\r\n        callbacks: {\r\n          label: function (context) {\r\n            return ` $${context.parsed.y.toFixed(2)}`;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const intervals = {\r\n    '1h': '1 Hour',\r\n    '1d': '1 Day',\r\n    '1w': '1 Week',\r\n    '1m': '1 Month',\r\n    '1y': '1 Year'\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <div className=\"btn-group-chart\">\r\n        {Object.keys(intervals).map(key => (\r\n          <button\r\n            key={key}\r\n            className={`btn btn-interval ${interval === key ? 'active' : ''}`}\r\n            onClick={() => setInterval(key)}\r\n          >\r\n            {intervals[key]}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"chart-wrapper\">\r\n        <Line data={chartData} options={chartOptions} ref={chartRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}