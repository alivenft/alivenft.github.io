{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\CryptoChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst intervals = {\n  '1h': 'm1',\n  '24h': 'h1',\n  '7d': 'd1',\n  '1m': 'd1',\n  '3m': 'd1',\n  '1y': 'd1'\n};\nconst CryptoChart = ({\n  data,\n  interval,\n  setInterval\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    // Your gradient effect logic here\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group btn-group-chart\",\n      role: \"group\",\n      children: Object.keys(intervals).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setInterval(key),\n        type: \"button\",\n        className: `btn btn-rounded btn-interval ${interval === key ? 'active' : ''}`,\n        children: key\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"price\",\n            stroke: \"#ff8c00\",\n            dot: {\n              r: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["React","useEffect","useRef","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","intervals","CryptoChart","data","interval","setInterval","_s","chartRef","className","children","role","Object","keys","map","key","onClick","type","fileName","_jsxFileName","lineNumber","columnNumber","width","height","strokeDasharray","dataKey","stroke","dot","r","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/CryptoChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\n\r\nconst intervals = {\r\n  '1h': 'm1',\r\n  '24h': 'h1',\r\n  '7d': 'd1',\r\n  '1m': 'd1',\r\n  '3m': 'd1',\r\n  '1y': 'd1',\r\n};\r\n\r\nconst CryptoChart = ({ data, interval, setInterval }) => {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Your gradient effect logic here\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className=\"chart-container mt-5\">\r\n      <div className=\"btn-group btn-group-chart\" role=\"group\">\r\n        {Object.keys(intervals).map(key => (\r\n          <button \r\n            key={key} \r\n            onClick={() => setInterval(key)} \r\n            type=\"button\"\r\n            className={`btn btn-rounded btn-interval ${interval === key ? 'active' : ''}`}\r\n          >\r\n            {key}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"chart-wrapper\">\r\n        <ResponsiveContainer width=\"100%\" height={400}>\r\n          <LineChart data={data}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"time\" />\r\n            <YAxis />\r\n            <Tooltip />\r\n            <Legend />\r\n            <Line type=\"monotone\" dataKey=\"price\" stroke=\"#ff8c00\" dot={{ r: 3 }} />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}