{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CurrencyConverter=_ref=>{let{crypto}=_ref;const[usdAmount,setUsdAmount]=useState('');const[cryptoAmount,setCryptoAmount]=useState('');const[cryptoPrice,setCryptoPrice]=useState(null);useEffect(()=>{const fetchCryptoPrice=async()=>{try{const response=await axios.get(\"https://api.coincap.io/v2/assets/\".concat(crypto));setCryptoPrice(parseFloat(response.data.data.priceUsd));}catch(error){console.error('Error fetching crypto price:',error);}};fetchCryptoPrice();const interval=setInterval(fetchCryptoPrice,10000);return()=>{clearInterval(interval);setUsdAmount('');setCryptoAmount('');};},[crypto]);const handleUsdChange=e=>{const usdValue=e.target.value;setUsdAmount(usdValue);if(cryptoPrice){setCryptoAmount((usdValue/cryptoPrice).toFixed(8));}};const handleCryptoChange=e=>{const cryptoValue=e.target.value;setCryptoAmount(cryptoValue);if(cryptoPrice){setUsdAmount((cryptoValue*cryptoPrice).toFixed(2));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"crypto-info-container\",children:[/*#__PURE__*/_jsx(\"h2\",{style:{fontSize:'auto',textAlign:'center'},children:\"USD to \".concat(crypto.toUpperCase(),\" Converter\")}),/*#__PURE__*/_jsx(\"div\",{className:\"converter-wrapper\",style:{display:'inline-flex',gap:'5px'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"input-group mb-2\",children:/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",placeholder:\"Enter USD amount\",value:usdAmount,onChange:handleUsdChange})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsx(\"div\",{className:\"input-group mb-2\",children:/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",placeholder:\"Enter \".concat(crypto.toUpperCase(),\" amount\"),value:cryptoAmount,onChange:handleCryptoChange})})})]})})]});};export default CurrencyConverter;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","CurrencyConverter","_ref","crypto","usdAmount","setUsdAmount","cryptoAmount","setCryptoAmount","cryptoPrice","setCryptoPrice","fetchCryptoPrice","response","get","concat","parseFloat","data","priceUsd","error","console","interval","setInterval","clearInterval","handleUsdChange","e","usdValue","target","value","toFixed","handleCryptoChange","cryptoValue","className","children","style","fontSize","textAlign","toUpperCase","display","gap","placeholder","onChange"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/CurrencyConverter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CurrencyConverter = ({ crypto }) => {\r\n  const [usdAmount, setUsdAmount] = useState('');\r\n  const [cryptoAmount, setCryptoAmount] = useState('');\r\n  const [cryptoPrice, setCryptoPrice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoPrice = async () => {\r\n      try {\r\n        const response = await axios.get(`https://api.coincap.io/v2/assets/${crypto}`);\r\n        setCryptoPrice(parseFloat(response.data.data.priceUsd));\r\n      } catch (error) {\r\n        console.error('Error fetching crypto price:', error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoPrice();\r\n    const interval = setInterval(fetchCryptoPrice, 10000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      setUsdAmount('');\r\n      setCryptoAmount('');\r\n    };\r\n  }, [crypto]);\r\n\r\n  const handleUsdChange = (e) => {\r\n    const usdValue = e.target.value;\r\n    setUsdAmount(usdValue);\r\n    if (cryptoPrice) {\r\n      setCryptoAmount((usdValue / cryptoPrice).toFixed(8));\r\n    }\r\n  };\r\n\r\n  const handleCryptoChange = (e) => {\r\n    const cryptoValue = e.target.value;\r\n    setCryptoAmount(cryptoValue);\r\n    if (cryptoPrice) {\r\n      setUsdAmount((cryptoValue * cryptoPrice).toFixed(2));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"crypto-info-container\">\r\n      <h2 style={{ fontSize: 'auto', textAlign: 'center' }}>{`USD to ${crypto.toUpperCase()} Converter`}</h2>\r\n      <div className=\"converter-wrapper\" style={{ display: 'inline-flex', gap: '5px' }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6\">\r\n            <div className=\"input-group mb-2\">\r\n              <input\r\n                className=\"form-control\"\r\n                placeholder=\"Enter USD amount\"\r\n                value={usdAmount}\r\n                onChange={handleUsdChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            <div className=\"input-group mb-2\">\r\n              <input\r\n                className=\"form-control\"\r\n                placeholder={`Enter ${crypto.toUpperCase()} amount`}\r\n                value={cryptoAmount}\r\n                onChange={handleCryptoChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyConverter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}