{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\LiveBTCPrice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveBTCPrice = () => {\n  _s();\n  const [price, setPrice] = useState(null);\n  const [previousPrice, setPreviousPrice] = useState(null);\n  useEffect(() => {\n    const fetchPrice = async () => {\n      try {\n        const response = await axios.get('https://api.coincap.io/v2/assets/bitcoin');\n        const newPrice = parseFloat(response.data.data.priceUsd);\n        setPreviousPrice(price);\n        setPrice(newPrice);\n      } catch (error) {\n        console.error('Error fetching live BTC price:', error);\n      }\n    };\n    fetchPrice();\n    const interval = setInterval(fetchPrice, 10000);\n    return () => clearInterval(interval);\n  }, [price]);\n  const getColor = () => {\n    if (previousPrice === null) return '#39FF14';\n    return price > previousPrice ? '#39FF14' : '#FF0000';\n  };\n  const priceChange = () => {\n    if (price !== null && previousPrice !== null) {\n      const change = (price - previousPrice) / previousPrice * 100;\n      return change.toFixed(2);\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"live-price-container bg-hackerBlack text-hackerGreen p-4 rounded-lg shadow-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"live-price text-center mb-4\",\n      style: {\n        color: getColor()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"label font-bold mr-2\",\n        children: \"Live BTC Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"price font-bold\",\n        children: [\"$\", price ? price.toFixed(2) : 'Loading...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), price !== null && previousPrice !== null && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"price-indicator font-bold ml-2\",\n        style: {\n          fontSize: '0.8rem'\n        },\n        children: [price > previousPrice ? '▲' : '▼', \" (\", priceChange(), \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveBTCPrice, \"SFE3AL/LZaAHKltdsfQtxfHbr6Q=\");\n_c = LiveBTCPrice;\nexport default LiveBTCPrice;\nvar _c;\n$RefreshReg$(_c, \"LiveBTCPrice\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","LiveBTCPrice","_s","price","setPrice","previousPrice","setPreviousPrice","fetchPrice","response","get","newPrice","parseFloat","data","priceUsd","error","console","interval","setInterval","clearInterval","getColor","priceChange","change","toFixed","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/LiveBTCPrice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LiveBTCPrice = () => {\r\n  const [price, setPrice] = useState(null);\r\n  const [previousPrice, setPreviousPrice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPrice = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets/bitcoin');\r\n        const newPrice = parseFloat(response.data.data.priceUsd);\r\n        setPreviousPrice(price);\r\n        setPrice(newPrice);\r\n      } catch (error) {\r\n        console.error('Error fetching live BTC price:', error);\r\n      }\r\n    };\r\n\r\n    fetchPrice();\r\n    const interval = setInterval(fetchPrice, 10000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [price]);\r\n\r\n  const getColor = () => {\r\n    if (previousPrice === null) return '#39FF14';\r\n    return price > previousPrice ? '#39FF14' : '#FF0000';\r\n  };\r\n\r\n  const priceChange = () => {\r\n    if (price !== null && previousPrice !== null) {\r\n      const change = ((price - previousPrice) / previousPrice) * 100;\r\n      return change.toFixed(2);\r\n    }\r\n    return '';\r\n  };\r\n\r\n  return (\r\n    <div className=\"live-price-container bg-hackerBlack text-hackerGreen p-4 rounded-lg shadow-lg\">\r\n      <div className=\"live-price text-center mb-4\" style={{ color: getColor() }}>\r\n        <span className=\"label font-bold mr-2\">Live BTC Price:</span>\r\n        <span className=\"price font-bold\">${price ? price.toFixed(2) : 'Loading...'}</span>\r\n        {price !== null && previousPrice !== null && (\r\n          <span className=\"price-indicator font-bold ml-2\" style={{ fontSize: '0.8rem' }}>\r\n            {price > previousPrice ? '▲' : '▼'} ({priceChange()}%)\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveBTCPrice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}