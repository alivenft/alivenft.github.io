{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\CryptoChart.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst intervals = {\n  '1h': 'm1',\n  '24h': 'h1',\n  '7d': 'd1',\n  '1m': 'd1',\n  '3m': 'd1',\n  '1y': 'd1'\n};\nconst CryptoChart = ({\n  data,\n  interval,\n  setInterval\n}) => {\n  const chartData = {\n    datasets: [{\n      label: 'Price',\n      data: data.map(point => ({\n        x: point[0],\n        y: point[1]\n      })),\n      borderColor: '#b80000',\n      backgroundColor: 'rgba(184, 0, 0, 0.2)',\n      fill: true\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn-group-chart\",\n      role: \"group\",\n      children: Object.keys(intervals).map(key => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setInterval(key),\n        type: \"button\",\n        className: `btn btn-rounded btn-interval ${interval === key ? 'active' : ''}`,\n        children: key\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_c = CryptoChart;\nexport default CryptoChart;\nvar _c;\n$RefreshReg$(_c, \"CryptoChart\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","intervals","CryptoChart","data","interval","setInterval","chartData","datasets","label","map","point","x","y","borderColor","backgroundColor","fill","options","scales","type","time","unit","className","children","role","Object","keys","key","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/CryptoChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst intervals = {\r\n  '1h': 'm1',\r\n  '24h': 'h1',\r\n  '7d': 'd1',\r\n  '1m': 'd1',\r\n  '3m': 'd1',\r\n  '1y': 'd1',\r\n};\r\n\r\nconst CryptoChart = ({ data, interval, setInterval }) => {\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        label: 'Price',\r\n        data: data.map(point => ({ x: point[0], y: point[1] })),\r\n        borderColor: '#b80000',\r\n        backgroundColor: 'rgba(184, 0, 0, 0.2)',\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'time',\r\n        time: {\r\n          unit: 'day',\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart-container\">\r\n      <div className=\"btn-group-chart\" role=\"group\">\r\n        {Object.keys(intervals).map(key => (\r\n          <button \r\n            key={key} \r\n            onClick={() => setInterval(key)} \r\n            type=\"button\"\r\n            className={`btn btn-rounded btn-interval ${interval === key ? 'active' : ''}`}\r\n          >\r\n            {key}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAG;EAChB,IAAI,EAAE,IAAI;EACV,KAAK,EAAE,IAAI;EACX,IAAI,EAAE,IAAI;EACV,IAAI,EAAE,IAAI;EACV,IAAI,EAAE,IAAI;EACV,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EACvD,MAAMC,SAAS,GAAG;IAChBC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,OAAO;MACdL,IAAI,EAAEA,IAAI,CAACM,GAAG,CAACC,KAAK,KAAK;QAAEC,CAAC,EAAED,KAAK,CAAC,CAAC,CAAC;QAAEE,CAAC,EAAEF,KAAK,CAAC,CAAC;MAAE,CAAC,CAAC,CAAC;MACvDG,WAAW,EAAE,SAAS;MACtBC,eAAe,EAAE,sBAAsB;MACvCC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNN,CAAC,EAAE;QACDO,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BtB,OAAA;MAAKqB,SAAS,EAAC,iBAAiB;MAACE,IAAI,EAAC,OAAO;MAAAD,QAAA,EAC1CE,MAAM,CAACC,IAAI,CAACxB,SAAS,CAAC,CAACQ,GAAG,CAACiB,GAAG,iBAC7B1B,OAAA;QAEE2B,OAAO,EAAEA,CAAA,KAAMtB,WAAW,CAACqB,GAAG,CAAE;QAChCR,IAAI,EAAC,QAAQ;QACbG,SAAS,EAAE,gCAAgCjB,QAAQ,KAAKsB,GAAG,GAAG,QAAQ,GAAG,EAAE,EAAG;QAAAJ,QAAA,EAE7EI;MAAG,GALCA,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMF,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/B,OAAA,CAACF,IAAI;MAACK,IAAI,EAAEG,SAAU;MAACU,OAAO,EAAEA;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACC,EAAA,GAzCI9B,WAAW;AA2CjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}