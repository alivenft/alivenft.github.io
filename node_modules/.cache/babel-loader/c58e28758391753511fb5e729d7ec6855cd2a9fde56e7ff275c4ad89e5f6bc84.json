{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\LiveBTCPrice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveBTCPrice = () => {\n  _s();\n  const [price, setPrice] = useState(null);\n  const [initialPrice, setInitialPrice] = useState(null);\n  const [priceChangePercentage, setPriceChangePercentage] = useState(null);\n  const [color, setColor] = useState(localStorage.getItem('btcPriceColor') || '#39FF14');\n  useEffect(() => {\n    const fetchPrice = async () => {\n      try {\n        const response = await axios.get('https://api.coincap.io/v2/assets/bitcoin');\n        const newPrice = parseFloat(response.data.data.priceUsd);\n\n        // Set the initial price when the component mounts\n        if (initialPrice === null) {\n          setInitialPrice(newPrice);\n        }\n\n        // Calculate the price change percentage based on the initial price\n        const newPriceChangePercentage = initialPrice !== null ? (newPrice - initialPrice) / initialPrice * 100 : null;\n        setPrice(newPrice); // Update current price\n        setPriceChangePercentage(newPriceChangePercentage);\n\n        // Update color based on the price change direction\n        setColor(newPriceChangePercentage > 0 ? '#39FF14' : '#FF0000');\n        localStorage.setItem('btcPriceColor', newPriceChangePercentage > 0 ? '#39FF14' : '#FF0000');\n      } catch (error) {\n        console.error('Error fetching live BTC price:', error);\n      }\n    };\n    fetchPrice();\n    const interval = setInterval(fetchPrice, 10000);\n    return () => clearInterval(interval);\n  }, [initialPrice]); // Run effect when initialPrice changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"live-price-container bg-hackerBlack text-hackerGreen p-4 rounded-lg shadow-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"live-price text-center mb-4\",\n      style: {\n        color: color\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"label font-bold mr-2\",\n        children: \"Live BTC Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"price font-bold\",\n        children: [\"$\", price ? price.toFixed(2) : 'Loading...']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), priceChangePercentage !== null && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"price-indicator font-bold ml-2\",\n        style: {\n          fontSize: '0.8rem'\n        },\n        children: [priceChangePercentage > 0 ? '▲' : '▼', \" (\", priceChangePercentage.toFixed(2), \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveBTCPrice, \"AKUIWq93fPtMAuE4SZm2vLyMSTc=\");\n_c = LiveBTCPrice;\nexport default LiveBTCPrice;\nvar _c;\n$RefreshReg$(_c, \"LiveBTCPrice\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","LiveBTCPrice","_s","price","setPrice","initialPrice","setInitialPrice","priceChangePercentage","setPriceChangePercentage","color","setColor","localStorage","getItem","fetchPrice","response","get","newPrice","parseFloat","data","priceUsd","newPriceChangePercentage","setItem","error","console","interval","setInterval","clearInterval","className","children","style","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/LiveBTCPrice.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LiveBTCPrice = () => {\r\n  const [price, setPrice] = useState(null);\r\n  const [initialPrice, setInitialPrice] = useState(null);\r\n  const [priceChangePercentage, setPriceChangePercentage] = useState(null);\r\n  const [color, setColor] = useState(localStorage.getItem('btcPriceColor') || '#39FF14');\r\n\r\n  useEffect(() => {\r\n    const fetchPrice = async () => {\r\n      try {\r\n        const response = await axios.get('https://api.coincap.io/v2/assets/bitcoin');\r\n        const newPrice = parseFloat(response.data.data.priceUsd);\r\n\r\n        // Set the initial price when the component mounts\r\n        if (initialPrice === null) {\r\n          setInitialPrice(newPrice);\r\n        }\r\n\r\n        // Calculate the price change percentage based on the initial price\r\n        const newPriceChangePercentage =\r\n          initialPrice !== null ? ((newPrice - initialPrice) / initialPrice) * 100 : null;\r\n\r\n        setPrice(newPrice); // Update current price\r\n        setPriceChangePercentage(newPriceChangePercentage);\r\n\r\n        // Update color based on the price change direction\r\n        setColor(newPriceChangePercentage > 0 ? '#39FF14' : '#FF0000');\r\n        localStorage.setItem('btcPriceColor', newPriceChangePercentage > 0 ? '#39FF14' : '#FF0000');\r\n      } catch (error) {\r\n        console.error('Error fetching live BTC price:', error);\r\n      }\r\n    };\r\n\r\n    fetchPrice();\r\n    const interval = setInterval(fetchPrice, 10000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [initialPrice]); // Run effect when initialPrice changes\r\n\r\n  return (\r\n    <div className=\"live-price-container bg-hackerBlack text-hackerGreen p-4 rounded-lg shadow-lg\">\r\n      <div className=\"live-price text-center mb-4\" style={{ color: color }}>\r\n        <span className=\"label font-bold mr-2\">Live BTC Price:</span>\r\n        <span className=\"price font-bold\">${price ? price.toFixed(2) : 'Loading...'}</span>\r\n        {priceChangePercentage !== null && (\r\n          <span className=\"price-indicator font-bold ml-2\" style={{ fontSize: '0.8rem' }}>\r\n            {priceChangePercentage > 0 ? '▲' : '▼'} ({priceChangePercentage.toFixed(2)}%)\r\n          </span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveBTCPrice;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}