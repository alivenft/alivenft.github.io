{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\EL\\\\Documents\\\\GitHub\\\\alivenft.github.io\\\\src\\\\components\\\\CurrencyConverter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CurrencyConverter = ({\n  crypto\n}) => {\n  _s();\n  const [usdAmount, setUsdAmount] = useState('');\n  const [cryptoAmount, setCryptoAmount] = useState('');\n  const [cryptoPrice, setCryptoPrice] = useState(null);\n  useEffect(() => {\n    const fetchCryptoPrice = async () => {\n      try {\n        const response = await axios.get(`https://api.coincap.io/v2/assets/${crypto}`);\n        setCryptoPrice(parseFloat(response.data.data.priceUsd));\n      } catch (error) {\n        console.error('Error fetching crypto price:', error);\n      }\n    };\n    fetchCryptoPrice();\n    const interval = setInterval(fetchCryptoPrice, 10000);\n    return () => clearInterval(interval);\n  }, [crypto]);\n  const handleUsdChange = e => {\n    const usdValue = e.target.value;\n    setUsdAmount(usdValue);\n    if (cryptoPrice) {\n      setCryptoAmount((usdValue / cryptoPrice).toFixed(8));\n    }\n  };\n  const handleCryptoChange = e => {\n    const cryptoValue = e.target.value;\n    setCryptoAmount(cryptoValue);\n    if (cryptoPrice) {\n      setUsdAmount((cryptoValue * cryptoPrice).toFixed(2));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"crypto-info-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Currency Converter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          placeholder: \"Enter USD amount\",\n          value: usdAmount,\n          onChange: handleUsdChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          placeholder: `Enter ${crypto.toUpperCase()} amount`,\n          value: cryptoAmount,\n          onChange: handleCryptoChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(CurrencyConverter, \"0JgVgoi93NlOsVPn2hqQk1XmRws=\");\n_c = CurrencyConverter;\nexport default CurrencyConverter;\nvar _c;\n$RefreshReg$(_c, \"CurrencyConverter\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","CurrencyConverter","crypto","_s","usdAmount","setUsdAmount","cryptoAmount","setCryptoAmount","cryptoPrice","setCryptoPrice","fetchCryptoPrice","response","get","parseFloat","data","priceUsd","error","console","interval","setInterval","clearInterval","handleUsdChange","e","usdValue","target","value","toFixed","handleCryptoChange","cryptoValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/EL/Documents/GitHub/alivenft.github.io/src/components/CurrencyConverter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst CurrencyConverter = ({ crypto }) => {\r\n  const [usdAmount, setUsdAmount] = useState('');\r\n  const [cryptoAmount, setCryptoAmount] = useState('');\r\n  const [cryptoPrice, setCryptoPrice] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchCryptoPrice = async () => {\r\n      try {\r\n        const response = await axios.get(`https://api.coincap.io/v2/assets/${crypto}`);\r\n        setCryptoPrice(parseFloat(response.data.data.priceUsd));\r\n      } catch (error) {\r\n        console.error('Error fetching crypto price:', error);\r\n      }\r\n    };\r\n\r\n    fetchCryptoPrice();\r\n    const interval = setInterval(fetchCryptoPrice, 10000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [crypto]);\r\n\r\n  const handleUsdChange = (e) => {\r\n    const usdValue = e.target.value;\r\n    setUsdAmount(usdValue);\r\n    if (cryptoPrice) {\r\n      setCryptoAmount((usdValue / cryptoPrice).toFixed(8));\r\n    }\r\n  };\r\n\r\n  const handleCryptoChange = (e) => {\r\n    const cryptoValue = e.target.value;\r\n    setCryptoAmount(cryptoValue);\r\n    if (cryptoPrice) {\r\n      setUsdAmount((cryptoValue * cryptoPrice).toFixed(2));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"crypto-info-container\">\r\n      <h2>Currency Converter</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder=\"Enter USD amount\"\r\n            value={usdAmount}\r\n            onChange={handleUsdChange}\r\n          />\r\n        </div>\r\n        <div className=\"col\">\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            placeholder={`Enter ${crypto.toUpperCase()} amount`}\r\n            value={cryptoAmount}\r\n            onChange={handleCryptoChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrencyConverter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}